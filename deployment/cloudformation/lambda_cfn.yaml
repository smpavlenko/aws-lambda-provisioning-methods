---
AWSTemplateFormatVersion: 2010-09-09

Description: Coding Dojo Lambda Cloudformation

Parameters:
  S3BucketName:
    Type: String

  LambdaRoleName:
    Type: String

  LambdaFunctionName:
    Type: String

  AppJarBucket:
    Type: String

  AppJarName:
    Type: String

  TagEnv:
    Description: Environment tag
    Type: String

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref LambdaRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"

  LambdaS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "LambdaS3Policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}"
              - !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}/*"
      Roles:
        - !Ref LambdaRole

  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "LambdaPolicy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
      Roles:
          - !Ref LambdaRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref AppJarBucket
        S3Key: !Ref AppJarName
      FunctionName: !Ref LambdaFunctionName
      Handler: "com.pavlenko.lambda.LambdaFunction::handleRequest"
      ReservedConcurrentExecutions: 1
      MemorySize: 320
      Timeout: 150
      Role: !GetAtt LambdaRole.Arn
      Runtime: java8
      Tags:
        - Key: Env
          Value: !Ref TagEnv

  BucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}"

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      Tags:
      - Key: Env
        Value: !Ref TagEnv
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: 's3:ObjectCreated:Put'
          Function: !GetAtt LambdaFunction.Arn
          Filter:
            S3Key:
              Rules:
                -
                  Name: prefix
                  Value: "input"
